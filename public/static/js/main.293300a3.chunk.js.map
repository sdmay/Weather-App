{"version":3,"sources":["components/temp.tsx","components/temperror.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Temp","props","cityName","city","toUpperCase","substr","stateName","state","react_default","a","createElement","temperature","TempError","style","color","App","loaded","error","event","preventDefault","this","setState","currentTarget","value","console","log","_this2","length","alert","axios","get","concat","then","data","catch","err","_this3","className","Fragment","name","placeholder","onChange","cityChange","handleStateSelection","onClick","resetState","getTemperature","temp","temperror","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.293300a3.chunk.js","sourcesContent":["import React from 'react';\r\n// (`It is ${value.data.temperature} degrees in ${this.state.city}, ${this.state.state}`)\r\ninterface ITempProps {\r\n    temperature: number,\r\n    city: string,\r\n    state: string\r\n}\r\nconst Temp = (props: ITempProps) => {\r\n    const cityName = props.city[0].toUpperCase() + props.city.substr(1)\r\n    const stateName = props.state.toUpperCase()\r\n\r\n    return (\r\n        <div>\r\n        <h1>It is {props.temperature} degrees in {cityName}, {stateName}</h1>\r\n     </div>\r\n    )\r\n    }\r\n\r\n\r\n\r\n\r\nexport default Temp;","import React from 'react';\r\ninterface ITempErrorProps {\r\n    city: string\r\n}\r\nconst TempError = (props: ITempErrorProps) => {\r\n\r\n    return (\r\n        <div>\r\n            <h2 style={{color: 'red'}}>{props.city} was not found.</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TempError;","import React, { Component } from 'react';\nimport axios, { AxiosResponse } from 'axios';\nimport './App.css';\nimport Axios from 'axios';\nimport Temp from './components/temp';\nimport TempError from './components/temperror';\n\nclass App extends Component {\n  state = {\n    loaded: false,\n    error: false,\n    city: '',\n    state: '',\n    temperature: 0\n  }\n  cityChange(event: React.FormEvent<HTMLInputElement>) {\n    event.preventDefault()\n    this.setState({\n      city: event.currentTarget.value\n    })\n  }\n  handleStateSelection(event: React.FormEvent<HTMLInputElement>) {\n    console.log(event.currentTarget.value)\n    this.setState({\n      state: event.currentTarget.value\n    })\n  }\n  getTemperature() {\n    console.log('CLICKIII')\n    if(this.state.city.length === 0) {\n      alert('You must enter a city!')\n      return false\n    }\n    if(this.state.state === '') {\n      alert('You must select a state!')\n      return false\n    }\n    console.log(this.state.city, this.state.state)\n   const x = axios.get(`weather/${this.state.city}/${this.state.state}`,\n   ).then((value: AxiosResponse) => {\n     if (value.data.error) {\n       console.log(value.data.error)\n       this.setState({\n         loaded: true,\n         error: true\n       })\n     }\n     if (value.data.temperature) {\n       \n       console.log(`It is ${value.data.temperature} degrees in ${this.state.city}, ${this.state.state}`)\n      this.setState({\n        temperature: value.data.temperature,\n        loaded: true\n      })\n     }\n        \n    }).catch((err: any) => {\n      return err\n    })\n  }\n  resetState() {\n      this.setState({\n          loaded: false,\n          error: false,\n          city: '',\n          state: '',\n          temperature: 0\n\n      })\n  }\n\n  render() {\n    console.log(this.state.city)\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n        <h1>CNC Machines Weather App</h1>\n{!this.state.loaded ? \n<>\n<input name=\"City\" placeholder=\"Enter City\" onChange={(event: React.FormEvent<HTMLInputElement>) => this.cityChange(event)} />\n        <select value={this.state.state} onChange={(event: any) => this.handleStateSelection(event)}>\n        <option value=\"\">Select State</option>\n\t<option value=\"AL\">Alabama</option>\n\t<option value=\"AK\">Alaska</option>\n\t<option value=\"AZ\">Arizona</option>\n\t<option value=\"AR\">Arkansas</option>\n\t<option value=\"CA\">California</option>\n\t<option value=\"CO\">Colorado</option>\n\t<option value=\"CT\">Connecticut</option>\n\t<option value=\"DE\">Delaware</option>\n\t<option value=\"FL\">Florida</option>\n\t<option value=\"GA\">Georgia</option>\n\t<option value=\"HI\">Hawaii</option>\n\t<option value=\"ID\">Idaho</option>\n\t<option value=\"IL\">Illinois</option>\n\t<option value=\"IN\">Indiana</option>\n\t<option value=\"IA\">Iowa</option>\n\t<option value=\"KS\">Kansas</option>\n\t<option value=\"KY\">Kentucky</option>\n\t<option value=\"LA\">Louisiana</option>\n\t<option value=\"ME\">Maine</option>\n\t<option value=\"MD\">Maryland</option>\n\t<option value=\"MA\">Massachusetts</option>\n\t<option value=\"MI\">Michigan</option>\n\t<option value=\"MN\">Minnesota</option>\n\t<option value=\"MS\">Mississippi</option>\n\t<option value=\"MO\">Missouri</option>\n\t<option value=\"MT\">Montana</option>\n\t<option value=\"NE\">Nebraska</option>\n\t<option value=\"NV\">Nevada</option>\n\t<option value=\"NH\">New Hampshire</option>\n\t<option value=\"NJ\">New Jersey</option>\n\t<option value=\"NM\">New Mexico</option>\n\t<option value=\"NY\">New York</option>\n\t<option value=\"NC\">North Carolina</option>\n\t<option value=\"ND\">North Dakota</option>\n\t<option value=\"OH\">Ohio</option>\n\t<option value=\"OK\">Oklahoma</option>\n\t<option value=\"OR\">Oregon</option>\n\t<option value=\"PA\">Pennsylvania</option>\n\t<option value=\"RI\">Rhode Island</option>\n\t<option value=\"SC\">South Carolina</option>\n\t<option value=\"SD\">South Dakota</option>\n\t<option value=\"TN\">Tennessee</option>\n\t<option value=\"TX\">Texas</option>\n\t<option value=\"UT\">Utah</option>\n\t<option value=\"VT\">Vermont</option>\n\t<option value=\"VA\">Virginia</option>\n\t<option value=\"WA\">Washington</option>\n\t<option value=\"WV\">West Virginia</option>\n\t<option value=\"WI\">Wisconsin</option>\n\t<option value=\"WY\">Wyoming</option>\n</select> </>: null }\n{!this.state.loaded ? <button onClick={() => this.getTemperature()}>Get Temperature</button> : <button onClick={() => this.resetState()}>Reset</button>}\n{this.state.loaded && !this.state.error ? <Temp temperature={this.state.temperature} city={this.state.city} state={this.state.state}/>: null}\n{this.state.loaded && this.state.error ? <TempError city={this.state.city}/> : null}\n               </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}